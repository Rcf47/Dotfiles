from subprocess import check_output


class Commands:

    def get_keyboard(self):
        display_map = {
            "us": "üá∫üá∏ ",
            "ru": "üá∑üá∫ ",
        }
        keyboard = (
            check_output("xkb-switch -p",
                         shell=True).decode("utf-8").replace("\n", "")
        )

        return display_map[keyboard]

    def parse_window_name(self, text):
        text = ""
        return text

    def minimize_all(self, qtile):
        """–ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–µ—Ç/–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –æ–∫–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–π –≥—Ä—É–ø–ø–µ."""
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω—É—é –≥—Ä—É–ø–ø—É
        current_group = qtile.current_group

        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–∫–Ω–∞ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ
        for window in current_group.windows:
            # –í—ã–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–∫–Ω–∞
            if hasattr(window, "toggle_minimize"):
                window.toggle_minimize()

    def kill_all(self, qtile):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –æ–∫–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–π –≥—Ä—É–ø–ø–µ."""
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω—É—é –≥—Ä—É–ø–ø—É
        current_group = qtile.current_group

        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–∫–æ–Ω –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è,
        # —Ç–∞–∫ –∫–∞–∫ –∏—Ç–µ—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—Ä—É—à–µ–Ω –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
        windows_to_kill = list(current_group.windows)

        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –æ–∫–Ω–∞ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ
        for window in windows_to_kill:
            # –î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ .kill()
            window.kill()


commands = Commands()
